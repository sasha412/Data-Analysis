val f = sc.textFile("sample.txt")
// word count 
val wc = f.flatMap(l => l.split(" ")).map(word => (word,1)).reduceByKey(_ + _)
// swap k,v to v,k to sort by word frequency
val wc_swapkv = wc.map(_.swap)
// sort keys by ascending=false (descending)
val sort_HightoLow = wc_swapkv.sortByKey(false,1)
sort_HightoLow.collect().foreach(println)
// get an array of top 20 frequent words
val top20 = sort_HightoLow.take(20)
// convert array to RDD
val top20rdd = sc.parallelize(top20)
top20rdd.collect().foreach(println)
